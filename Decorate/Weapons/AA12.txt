ACTOR FPAA12 : Inventory
{ +INVENTORY.UNDROPPABLE Inventory.MaxAmount 1 }

ACTOR AA12Pickup : CustomInventory {
	Inventory.PickupMessage "You got the AA-12 Explosive Shotgun!"
	Inventory.PickupSound "misc/w_pkup"
	Scale .375
	States
	{
	Spawn:
		AAEP A -1
		Stop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("AA12",1,"Ammo")
		TNT1 A 0 A_GiveInventory("AA12")
		TNT1 A 0 A_GiveInventory("FPAA12",1)
		Stop
	Ammo:
		TNT1 A 0 A_JumpIfInventory("AA12Ammo",100,"PFail")
		TNT1 A 0 A_GiveInventory("AA12Ammo",20)
		Stop
	PFail:
		TNT1 A 0
		fail
	}
}

ACTOR AA12Drop : CustomInventory {
	Inventory.PickupMessage "You got the AA-12 Explosive Shotgun!"
	Inventory.PickupSound "misc/w_pkup"
	Scale .375
	States
	{
	Spawn:
		AAEP A -1
		Stop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("AA12",1,"Ammo")
		TNT1 A 0 A_GiveInventory("AA12")
		TNT1 A 0 A_GiveInventory("FPAA12",1)
		Stop
	Ammo:
		TNT1 A 0 A_JumpIfInventory("AA12Ammo",100,"PFail")
		TNT1 A 0 A_GiveInventory("AA12Ammo",10)
		Stop
	PFail:
		TNT1 A 0
		fail
	}
}

ACTOR AA12 : PPGWeapon
{
	Weapon.SelectionOrder 100
	Weapon.AmmoType		"AA12Ammo"
	Weapon.AmmoUse		1
	Weapon.AmmoGive1 20
	Weapon.SlotNumber 5
	DONTHURTSHOOTER
//	AttackSound "aa12/fire"
	Inventory.Icon "aa12icon"
	Inventory.PickupMessage "You got the AA-12 Explosive Shotgun!"
	Obituary "%o was pwned by %k's AA-12."
	States
	{
	Spawn:
		AAEP A -1
		Stop
	Pickup:
		TNT1 A 0 A_GiveInventory("FPAA12",1)
		Stop
	Deselect:
		TNT1 A 0 {
			A_Overlay(AA12F,"Null");
			A_Overlay(AA12N,"Null");
			A_PlaySound("weapon/holstera",CHAN_AUTO);
		}
	Lower:
		TNT1 A 0 { 
			A_TakeInventory("RHSeq",9999);
	        A_TakeInventory("QuickKickInUse",9999);
			A_TakeInventory("PPGFistsPunchLeft",9999);
			A_TakeInventory("FistsInUse",9999);
			A_TakeInventory("WeaponInUse",9999);
			A_TakeInventory("SPInUse",9999);
			A_TakeInventory("SP6InUse",9999);
			A_TakeInventory("SP7InUse",9999);
		}
		AAEG A 1 A_Lower(12)
		Loop
	Select:
		TNT1 A 0 {
			A_Overlay(AA12N,"AA12Ready");
			A_OverlayFlags(AA12N,PPGWeapMove,true);
			A_PlaySound("weapon/raisea",CHAN_AUTO);
			A_PlaySound("aa12/bolt",CHAN_AUTO);
		}
	Raise:
		TNT1 A 0 { 
			A_TakeInventory("RHSeq",9999);
	        A_TakeInventory("QuickKickInUse",9999);
			A_TakeInventory("PPGFistsPunchLeft",9999);
			A_TakeInventory("FistsInUse",9999);
			A_TakeInventory("WeaponInUse",9999);
			A_TakeInventory("SPInUse",9999);
			A_TakeInventory("SP6InUse",9999);
			A_TakeInventory("SP7InUse",9999);
		}
		TNT1 A 1 A_Raise(12)
		Loop
    Ready:
		TNT1 A 0 A_JumpIfNoAmmo("OutofAmmo")
    	TNT1 A 0 {
			if(!CheckInventory("WeaponInUse",1)
				&& !CheckInventory("SP7InUse",1)) {
				A_Overlay(AA12N,"AA12Ready",true);
				A_OverlayFlags(AA12N,PPGWeapBob,true);
			}
		}
    	Goto ReadyLoop
	ReadyLoop:
    	TNT1 A 1 {
			if(CheckInventory("WeaponInUse",1) || CheckInventory("SPInUse",1)) {
					if(CheckInventory("SP7InUse",1)) {
						A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
					}
					else if(CheckInventory("SPInUse",1)) {
						A_WeaponReady(WRF_ALLOWUSER2|WRF_DISABLESWITCH);
					}
					else {
						A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_DISABLESWITCH);
					}
			}
			else {
				A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER2);
			}
		}
    	Goto Ready
    Fire:
		TNT1 A 1 { 
			if(!CheckInventory("WeaponInUse",1)
				&& !CheckInventory("SP7InUse",1)) {
					A_Overlay(AA12N,"Null");
					A_Overlay(AA12F,"AA12Fire");
			}
			if(CheckInventory("User1Refire",1)) {
				A_Overlay(SPower,"Superpowers");
			}
			if(CheckInventory("User2Refire",1)) {
				if(!CheckInventory("QuickKickInUse",1)) {
					A_Overlay(QKick,"QuickKick");
				}
			}
			// The following statements check if the player runs
			// out of ammo and jumps into a state to ensure that 
			// the firing animation finishes before entering back
			// into the Ready state to commence deselection. This
			// is for the purpose when the player uses fire and
			// altfire simultaneously. The first two actions caused 
			// problems and I only had to settle for the third.
			
			/*if(A_JumpIfNoAmmo("Null")) { <-- This crashes the game when
											   using alt.
				SetStateLabel("OutofAmmo");
			}
			
			A_JumpIfNoAmmo("OutofAmmo"); <-- Using this in the first frame
											 will still have the weapon jump 
											 to the Ready state.
			*/
		}
		TNT1 A 0 A_JumpIfNoAmmo("OutofAmmo") // This is the working result,
											  // running in a separate frame.
		Goto Ready
	OutofAmmo:
		TNT1 A 1 A_JumpIfNoAmmo(1)
		Goto Ready
		TNT1 A 1 {
			if(!CheckInventory("WeaponInUse",1)) {
				A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
			if(!CheckInventory("WeaponInUse",1) 
				&& !CheckInventory("SPInUse",1) 
				&& !CheckInventory("QuickKickInUse",1)
				&& A_JumpIfNoAmmo("Null")) {
				A_CheckReload();
			}
			if(CheckInventory("User1Refire",1)) {
				A_Overlay(SPower,"Superpowers");
			}
		}
		Loop
    AA12Ready:
    	AAEG A -1
    	Loop
    AA12Fire:
    	AAEF A 0 BRIGHT {
			A_GiveInventory("WeaponInUse",1);
			A_FireBullets(1,1,-1,32,"AA12Puff",1,1920);
			A_PlaySound("aa12/fire",CHAN_WEAPON);
		}
		AAEF A 1 Offset(3,2) BRIGHT
    	AAEF B 1 Offset(6,4) BRIGHT
    	AAEG C 1 Offset(9,6)
		AAEG C 1 Offset(12,8)
		AAEG B 1 Offset(9,6)
		AAEG B 1 Offset(6,4)
		AAEG A 1 Offset(3,2)
		AAEG A 1 Offset(0,0)
		TNT1 A 0 {
			if(CheckInventory("WeaponInUse",1)) {
				A_Overlay(AA12N,"AA12Ready");
				A_OverlayFlags(AA12N,PPGWeapBob,true);
			}
			A_TakeInventory("WeaponInUse",1);
		}
    	Stop
   FBHolster:
	  AAEG A 0 {
			A_GiveInventory("SPInUse",1);
			A_GiveInventory("SP7InUse",1);
			A_Overlay(AA12N,"Null");
		}
	  "####" "#" 1 Offset(0,16)
	  "####" "#" 1 Offset(0,32)
	  "####" "#" 1 Offset(0,48)
	  "####" "#" 1 Offset(0,64)
	  "####" "#" 1 Offset(0,80)
	  "####" "#" 1 Offset(0,96)
	  "####" "#" 0 {
			A_Overlay(SPower7,"BFRRaise");
			A_OverlayFlags(SPower7,PPGWeapBob,false);
		}
	  Stop
   FBRaise:
	  AAEG A 1 Offset(0,96)
	  "####" "#" 1 Offset(0,80)
	  "####" "#" 1 Offset(0,64)
	  "####" "#" 1 Offset(0,48)
	  "####" "#" 1 Offset(0,32)
	  "####" "#" 1 Offset(0,16)
	  "####" "#" 0 {
			A_TakeInventory("SPInUse",9999);
			A_TakeInventory("SP7InUse",9999);
			A_Overlay(AA12N,"AA12Ready");
			A_OverlayFlags(AA12N,PPGWeapBob,true);
	  }
	  Stop
    }
}

ACTOR AA12Ammo : Ammo
{
	Inventory.PickupSound "aa12/clipout"
	Inventory.PickupMessage "Picked up four Frag-12 shells."
	Inventory.MaxAmount 100
	Ammo.BackpackAmount 4
	Ammo.BackpackMaxAmount 100
	Inventory.Amount	4
	States
	{
	Spawn:
		AAEA A -1
		LOOP
	}
}

ACTOR AA12AmmoDrum : AA12Ammo
{
	Inventory.PickupSound "aa12/clipout"
	Inventory.PickupMessage "Picked up a Frag-12 Ammo Drum."
	Inventory.Amount	20
	Scale .375
	States
	{
	Spawn:
		AAEA B -1
		LOOP
	}
}

ACTOR AA12Puff : Actor
{
	DamageType "AntiTank"
	+FORCERADIUSDMG
	+ALWAYSPUFF
	+PUFFONACTORS
	+PUFFGETSOWNER
	+NOGRAVITY
	Scale .5
	DONTHURTSHOOTER
	States
	{
	Spawn:
		TNT1 A 0 A_PlaySound("weapon/rocklx")
		TNT1 A 0 A_Explode(32,96,0)
	//	TNT1 A 0 Radius_Quake(10,10,0,64,0)
		EXP3 GHIJKLMNOPQRSTUVW 1 BRIGHT
		Stop
	}
}
